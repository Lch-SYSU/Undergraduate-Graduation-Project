data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/Galaxy4-[Output_from_[CodonW]_on_data_2].txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/Galaxy17-[Output_Bulk_File_from_[CodonW]_on_data_2].txt', header = T)
# 重命名data1的基因列名
names(data1)[names(data1) == 'title'] <- c('Gene_description')
# 合并数据集
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
#########################ENC-plot#########################
library('ggplot2')
data3 <- transform(data3, G3.prop = G3/(G3 + C3))
data3 <- transform(data3, A3.prop = A3/(A3 + T3))
View(data3)
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
ggplot(data3, aes(x = GC3s.x, y = GC12)) + geom_point(shape = 16) + stat_smooth(method = lm)
View(data1)
View(data2)
cor.test(x = data3$GC12, y = data3$GC3s.x, method = 'spearman')
cor.test(x = data3$GC12, y = data3$GC3s.x, method = 'spearman', exact = F)
library(MASS)
birthwt
cor.test(x = data3$GC12, y = data3$GC3s.x, method = 'pearson')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) + geom_point(shape = 16) +
stat_function(fun = st.fun)
ggplot(data3, aes(x = GCn3s, y = Nc)) + geom_point(shape = 16) +
stat_function(fun = st.fun)
ggplot(data3, aes(x = GC3, y = Nc)) + geom_point(shape = 16) +
stat_function(fun = st.fun)
ggplot(data3, aes(x = GC3s.x, y = Nc)) + geom_point(shape = 16) +
stat_function(fun = st.fun)
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3[order(data3$Nc),]
View(data3)
data3 <- data3[order(data3$Nc),]
View(data3)
head.enc <- head(x = data3$Gene_description, n = length(data3) * 0.05)
head.enc
head.enc <- head(x = data3$Gene_description, n = length(data3) * 0.05, stringsAsFactors = F)
head.enc.gene <- head(x = data3$Gene_description, n = length(data3) * 0.05, stringsAsFactors = F)
head.enc.gene
head.enc.gene <- head(x = data3$Gene_description, n = length(data3) * 0.05, stringsAsFactors = T)
length(data3)
?ncol
nrow(data3)
head.enc.gene <- head(x = data3$Gene_description, n = nrow(data3) * 0.05, stringsAsFactors = T)
head.enc.gene
head.enc <- head(x = data3$Gene_description, n = nrow(data3) * 0.05, stringsAsFactors = F)
head.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.05))
head.enc
write.table(x = head.enc, file = 'D://学习/毕设/文献/数据/首5%基因列表.txt')
write.table(x = head.enc, file = 'D:\学习\毕设\数据\hk_gene seq\首5%基因.txt')
write.table(x = head.enc, file = 'D:/学习/毕设/数据/hk_gene seq/首5%基因.txt')
write.table(x = head.enc, file = 'D:/学习/毕设/数据/hk_gene seq/首5%基因.txt', row.names = F, quote = F)
write.table(x = tail.enc, file = 'D:/学习/毕设/数据/hk_gene seq/尾5%基因.txt', row.names = F, quote = F)
head.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.05))
tail.enc <- as.character(tail(x = data3$Gene_description, n = nrow(data3) * 0.05))
write.table(x = tail.enc, file = 'D:/学习/毕设/数据/hk_gene seq/尾5%基因.txt', row.names = F, quote = F)
extreme.bias <- subset(x = data3, subset = data3$Nc <= 35, select = Gene_description)
install.packages('org.Hs.eg.db')
?source
source("http://bioconductor.org/biocLite.R")
install.packages('org.Hs.eg.db')
options()$repos
options()$BioC_mirror
options(BioC_mirror="https://mirrors.ustc.edu.cn/bioc/")
options("repos" = c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options()$repos
options()$BioC_mirror
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("KEGG.db",ask = F,update = F)
install.packages("BiocManager")
BiocInstaller::biocLite("org.Hs.eg.db")
library('org.Hs.eg.db')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
View(data1)
View(data2)
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
extreme.bias <- subset(x = data3, subset = data3$Nc <= 35, select = Gene_description)
no.bias <- subset(x = data3, subset = data3$Nc >= 60, select = Gene_description)
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
extreme.bias <- subset(x = data3, subset = data3$Nc <= 35, select = Gene_description)
no.bias <- subset(x = data3, subset = data3$Nc >= 60, select = Gene_description)
View(extreme.bias)
?write.table
?read.delim
write.table(x = extreme.bias$Gene_description, file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\ENC小于等于35 acc.txt', quote = F, row.names = F)
write.table(x = no.bias$Gene_description, file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\ENC大于等于60 acc.txt', quote = F, row.names = F)
file.choose()
ENC.less35 <- read.table(file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\ENC小于等于35 ID.txt', header = T)
ENC.less35 <- read.table(file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\ENC小于等于35 ID.txt', header = T)
View(ENC.less35)
target_gene_id <- unique(ENC.less35$GeneID)
display_number = c(15, 10, 15)
library('clusterProfiler')
library('org.Hs.eg.db')
library('org.Hs.eg.db')
ego_MF <- enrichGO(OrgDb="org.Hs.eg.db",
gene = target_gene_id,
pvalueCutoff = 0.05,
ont = "MF",
readable=TRUE)
ego_result_MF <- as.data.frame(ego_MF)[1:display_number[1], ]
ego_CC <- enrichGO(OrgDb="org.Hs.eg.db",
gene = target_gene_id,
pvalueCutoff = 0.05,
ont = "CC",
readable=TRUE)
ego_result_CC <- as.data.frame(ego_CC)[1:display_number[2], ]
ego_result_CC <- as.data.frame(ego_CC)[1:display_number[2], ]
ego_BP <- enrichGO(OrgDb="org.Hs.eg.db",
gene = target_gene_id,
pvalueCutoff = 0.05,
ont = "BP",
readable=TRUE)
ego_result_BP <- na.omit(as.data.frame(ego_BP)[1:display_number[3], ])
go_enrich_df <- data.frame(ID=c(ego_result_BP$ID, ego_result_CC$ID, ego_result_MF$ID),
Description=c(ego_result_BP$Description, ego_result_CC$Description, ego_result_MF$Description),
GeneNumber=c(ego_result_BP$Count, ego_result_CC$Count, ego_result_MF$Count),
type=factor(c(rep("biological process", display_number[1]), rep("cellular component", display_number[2]),
rep("molecular function", display_number[3])), levels=c("molecular function", "cellular component", "biological process")))
go_enrich_df$number <- factor(rev(1:nrow(go_enrich_df)))
shorten_names <- function(x, n_word=4, n_char=40){
if (length(strsplit(x, " ")[[1]]) > n_word || (nchar(x) > 40))
{
if (nchar(x) > 40) x <- substr(x, 1, 40)
x <- paste(paste(strsplit(x, " ")[[1]][1:min(length(strsplit(x," ")[[1]]), n_word)],
collapse=" "), "...", sep="")
return(x)
}
else
{
return(x)
}
}
labels=(sapply(
levels(go_enrich_df$Description)[as.numeric(go_enrich_df$Description)],
shorten_names))
go_enrich_df <- data.frame(ID=c(ego_result_BP$ID, ego_result_CC$ID, ego_result_MF$ID),
Description=c(ego_result_BP$Description, ego_result_CC$Description, ego_result_MF$Description),
GeneNumber=c(ego_result_BP$Count, ego_result_CC$Count, ego_result_MF$Count),
type=factor(c(rep("biological process", display_number[1]), rep("cellular component", display_number[2]),
rep("molecular function", display_number[3])), levels=c("molecular function", "cellular component", "biological process")))
go_enrich_df <- data.frame(ID=c(ego_result_BP$ID, ego_result_CC$ID, ego_result_MF$ID),
Description=c(ego_result_BP$Description, ego_result_CC$Description, ego_result_MF$Description),
GeneNumber=c(ego_result_BP$Count, ego_result_CC$Count, ego_result_MF$Count),
type=factor(c(rep("biological process", display_number[1]), rep("cellular component", display_number[2]),
rep("molecular function", display_number[3])), levels=c("molecular function", "cellular component", "biological process")))
ego_result_MF
inertia <- read.table(file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\对应分析\\Correspondence analysis results from [CodonW] on data 2\\前40轴相对和累积贡献率.txt', header = T)
View(inertia)
library('ggplot2')
ggplot(inertia, aes(x = factor(Num.), y = R.Iner.)) +
geom_bar(stat = 'identity')
codon.coa <- read.table(file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\对应分析\\Correspondence analysis results from [CodonW] on data 2\\每密码子 前四轴分布.txt', header = T)
View(codon.coa)
codon.coa <- read.csv(file = 'D:\\学习\\毕设\\数据\\hk_gene seq\\对应分析\\每密码子前四轴分布2.csv', header = T)
View(codon.coa)
ggplot(codon.coa, aes(x = Axis1, y = Axis2, colour = type)) +
geom_point()
ggplot(codon.coa, aes(x = Axis1, y = Axis2, shape = type)) +
geom_point()
ggplot(codon.coa, aes(x = Axis1, y = Axis2, shape = factor(type)) +
geom_point()
#########################最优密码子#########################
# 根据ENC值排序data3，取出首尾5%基因名
data3 <- data3[order(data3$Nc),]
tail.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.05))
head.enc <- as.character(tail(x = data3$Gene_description, n = nrow(data3) * 0.05))
write.table(x = head.enc, file = 'D:/学习/毕设/数据/hk_gene seq/首5%基因.txt', row.names = F, quote = F)
write.table(x = tail.enc, file = 'D:/学习/毕设/数据/hk_gene seq/尾5%基因.txt', row.names = F, quote = F)
ggplot(codon.coa, aes(x = Axis1, y = Axis2, shape = factor(type))) +
geom_point()
data4 <- read.table(file = 'D:\\学习\\毕设\\数据\\whole genome\\偏好参数1.txt')
View(data4)
data4 <- read.table(file = 'D:\\学习\\毕设\\数据\\whole genome\\偏好参数1.txt', header = T)
View(data4)
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data4, aes(x = GC3s, y = Nc)) +
geom_point(shape = 16) +
stat_function(fun = st.fun)
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, G3.prop = G3/(G3 + C3))
data3 <- transform(data3, A3.prop = A3/(A3 + T3))
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
library('ggplot2')
View(data3)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
View(new_cai)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
library('ggplot2', 'reshape2')
?melt()
library(c('ggplot2', 'reshape2'))
library('reshape2')
View(data2)
View(data3)
ggplot(data3, aes(x = factor(c(1,2,3)), y = c(GC1, GC2, GC3))) +
geom_boxplot()
data.gc <- subset(data3, subset = c(Gene_description, GC1, GC2, GC3, GC.x))
data.gc <- subset(data3, select = c(Gene_description, GC1, GC2, GC3, GC.x))
View(data.gc)
library('ggplot2')
library('reshape2')
data.gc2 <- melt(data.gc, id.vars = 'Gene_description', variable.name = 'GC.type', value.name = 'GC.value')
View(data.gc2)
ggplot(data.gc2, aes(x = factor(GC.type), y = GC.value)) +
geom_boxplot()
ggplot(data3, aes(x = 1, y = Nc)) +
geom_violin() +
geom_boxplot(width = 0.1, fill = 'black') +
scale_x_continuous(breaks = NULL) +
theme(axis.title.x = element_blank()) +
stat_summary(fun.y = 'mean', geom = 'point', fill = 'white', shape = 23, size = 3)
ggplot(data3, aes(x = 1, y = Nc)) +
geom_violin(fill = 'brown') +
geom_boxplot(width = 0.1, fill = 'black') +
scale_x_continuous(breaks = NULL) +
theme(axis.title.x = element_blank()) +
stat_summary(fun.y = 'mean', geom = 'point', fill = 'white', shape = 23, size = 3)
ggplot(data3, aes(x = 1, y = Nc)) +
geom_violin() +
geom_boxplot(width = 0.1, fill = 'black') +
scale_x_continuous(breaks = NULL) +
theme(axis.title.x = element_blank()) +
stat_summary(fun.y = 'mean', geom = 'point', fill = 'white', shape = 23, size = 3)
ggplot(data3, aes(x = 1, y = Nc)) +
geom_violin() +
geom_boxplot(width = 0.1, fill = 'black', outlier.colour = NA) +
scale_x_continuous(breaks = NULL) +
theme(axis.title.x = element_blank()) +
stat_summary(fun.y = 'mean', geom = 'point', fill = 'white', shape = 23, size = 3)
ggplot(data.gc2, aes(x = factor(GC.type), y = GC.value)) +
geom_boxplot()
data.gc <- subset(data3, select = c(Gene_description, GC1, GC2, GC3, GC.x))
names(data.gc)[names(data.gc) == 'GC.x'] <- c('GC.all')
data.gc2 <- melt(data.gc, id.vars = 'Gene_description', variable.name = 'GC.type', value.name = 'GC.value')
View(data.gc2)
ggplot(data.gc2, aes(x = factor(GC.type), y = GC.value)) +
geom_boxplot()
data3 <- data3[order(data3$Nc),]
View(data3)
tail.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.05))
head.enc <- as.character(tail(x = data3$Gene_description, n = nrow(data3) * 0.05))
View(data3)
tail.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.1))
head.enc <- as.character(tail(x = data3$Gene_description, n = nrow(data3) * 0.1))
write.table(x = head.enc, file = 'D:/学习/毕设/数据/hk_gene seq/ENC小于35基因.txt', row.names = F, quote = F)
write.table(x = tail.enc, file = 'D:/学习/毕设/数据/hk_gene seq/ENC大于60基因.txt', row.names = F, quote = F)
data3 <- data3[order(data3$Nc),]
tail.enc <- as.character(head(x = data3$Gene_description, n = nrow(data3) * 0.1))
head.enc <- as.character(tail(x = data3$Gene_description, n = nrow(data3) * 0.1))
write.table(x = head.enc, file = 'D:/学习/毕设/数据/hk_gene seq/ENC极端高 基因.txt', row.names = F, quote = F)
write.table(x = tail.enc, file = 'D:/学习/毕设/数据/hk_gene seq/ENC极端低 基因.txt', row.names = F, quote = F)
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
library(corrplot)
View(data3)
cor.test(x = data3$Nc, y = data3$Len_aa)
View(data3)
plot(x = data3$Nc, y = data3$Len_aa)
plot(x = data3$Nc, y = data3$CAI)
cor.test(x = data3$Nc, y = data3$CAI)
cor.test(x = data3$Nc, y = data3$GC3s.x)
cor.test(x = data3$Nc, y = data3$GC12)
library('ggplot2')
library('reshape2')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
View(data3)
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<45, select = Gene_description)
View(Lowenc.Lowgc)
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<45, select = c(Gene_description, GC3s.x, Nc))
View(Lowenc.Lowgc)
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<35, select = c(Gene_description, GC3s.x, Nc))
View(Lowenc.Highgc)
View(Lowenc.Lowgc)
View(Lowenc.Highgc)
write.table(x = Lowenc.Lowgc$Gene_description, file = 'D:/学习/毕设/数据/whole genome/GC3s.x<0.3&Nc<45 acc.txt', quote = F, row.names = F)
write.table(x = Lowenc.Lowgc$Gene_description, file = 'D:/学习/毕设/数据/whole genome/GC3s.x<0.3 Nc<45 acc.txt', quote = F, row.names = F)
write.table(x = Lowenc.Lowgc$Gene_description, file = 'D:/学习/毕设/数据/whole genome/GC3s.x0.3 Nc45 acc.txt', quote = F, row.names = F)
write.table(x = Lowenc.Highgc$Gene_description, file = 'D:/学习/毕设/数据/whole genome/GC3s.x0.8 Nc35 acc.txt', quote = F, row.names = F)
library('ggplot2')
library('reshape2')
library('corrplot')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
library('ggplot2')
library('reshape2')
library('corrplot')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
library('ggplot2')
library('reshape2')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
View(data3)
View(data3)
View(data3)
View(data3)
data1 <- read.csv('D:\\学习\\毕设\\数据\\whole genome\\表达数据\\GC3s.x0.8 Nc35 acc.csv', header = T)
data2 <- read.csv('D:\\学习\\毕设\\数据\\whole genome\\表达数据\\GC3s.x0.3 Nc45 acc.csv', header = T)
data3 <- na.omit(c(data1$expr1, data2$expr1))
len1 <- sum(complete.cases(data1$expr1))
len2 <- sum(complete.cases(data2$expr1))
f <- factor(rep(c("高GC","低GC"), c(len1, len2)))
boxplot(data3~f)
boxplot(data3~f, outline = F)
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
library('ggplot2')
library('reshape2')
library('corrplot')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<45, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<35, select = c(Gene_description, GC3s.x, Nc))
View(Lowenc.Lowgc)
View(Lowenc.Highgc)
library('ggplot2')
library('reshape2')
library('corrplot')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
library('ggplot2')
library('reshape2')
library('corrplot')
data1 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/全基因组/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/全基因组/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/hk_gene seq/全基因组/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
st.fun <- function(gc3){
2 + gc3 + 29/(gc3**2 + (1-gc3)**2)
}
ggplot(data3, aes(x = GC3s.x, y = Nc)) +
geom_point(shape = 16, size = 0.1) +
stat_function(fun = st.fun, size = 1) +
geom_hline(yintercept = 35) +
scale_y_continuous(breaks = c(25,30,35,40,45,50,55,60,65)) +
theme(axis.line = element_line(colour = 'black')) +
xlab('GC3s')
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<47, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<37, select = c(Gene_description, GC3s.x, Nc))
View(Lowenc.Lowgc)
View(Lowenc.Highgc)
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<48, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<36, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<50, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<49, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<36, select = c(Gene_description, GC3s.x, Nc))
View(Lowenc.Highgc)
View(Lowenc.Lowgc)
write.table(x = Lowenc.Lowgc$Gene_description, file = 'D:/学习/毕设/数据/data/HELA/GC3s.x0.3 Nc49 acc.txt', quote = F, row.names = F)
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<36, select = c(Gene_description, GC3s.x, Nc))
write.table(x = Lowenc.Highgc$Gene_description, file = 'D:/学习/毕设/数据/data/HELA/GC3s.x0.8 Nc36 acc.txt', quote = F, row.names = F)
library('xlsx')
install.packages('xlsx')
library('xlsx')
library('ggplot2')
library('reshape2')
data1 <- read.table(file = 'D:/学习/毕设/数据/data/全基因组/密码子偏好相关参数1.txt', header = T)
data2 <- read.table(file = 'D:/学习/毕设/数据/data/全基因组/密码子偏好相关参数2.txt', header = T)
names(data1)[names(data1) == 'title'] <- c('Gene_description')
data3 <- merge(x = data1, y = data2, by = 'Gene_description')
data3 <- transform(data3, GC12 = (GC1 + GC2)/2)
data3 <- subset(data3, select = -CAI)
new_cai <- read.table(file = 'D:/学习/毕设/数据/data/全基因组/CAI.txt', header = T)
names(new_cai)[names(new_cai) == 'FastaHeader'] <- c('Gene_description')
data3 <- merge(x = data3, y = new_cai, by = 'Gene_description')
Lowenc.Lowgc <- subset(x = data3, subset = GC3s.x<0.3 & Nc<49, select = c(Gene_description, GC3s.x, Nc))
Lowenc.Highgc <- subset(x = data3, subset = GC3s.x>0.8 & Nc<36, select = c(Gene_description, GC3s.x, Nc))
data.gc0.3 <- read.csv('D:\\学习\\毕设\\数据\\data\\HELA\\GC0.3 TPM SRR3589956.csv', header = T)
data.gc0.8 <- read.csv('D:\\学习\\毕设\\数据\\data\\HELA\\GC0.8 TPM SRR3589956.csv', header = T)
View(data.gc0.3)
View(data.gc0.8)
data1 <- na.omit(c(data.gc0.3$TPM1, data.gc0.8$TPM1))
len1 <- sum(complete.cases(data.gc0.3$TPM1))
len2 <- sum(complete.cases(data.gc0.8$TPM1))
f <- factor(rep(c("低GC","高GC"), c(len1, len2)))
boxplot(data1~f)
boxplot(data1~f, outline = F)
boxplot(data1~f)
